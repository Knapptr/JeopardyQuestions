{"version":3,"sources":["hooks/useRandomQuestion.js","styledcomponents/components.js","header.js","LoadingHandler.js","QuestionInformation.js","StyledQuestionAnswerBox.js","QuestionAnswerBox.js","App.js","reportWebVitals.js","index.js"],"names":["stripHTMLFromAnswerResponse","string","tagRE","test","match","groups","contents","replace","jeopardyBlue","jeopardyYellow","jeopardyPurple","StyledApp","styled","div","StyledHeader","header","StyledQuestionInformation","MedInfo","h4","p","MedHeader","h2","CategoryName","ValueInfo","Button","props","visible","button","StyledQuestion","StyledQuestionText","StyledLoadingWrapper","ContentFrame","Controls","Date","Header","Loader","color","LoadingHandler","loading","children","QuestionInformation","category","value","date","InnerRelativeShell","ContentContainer","isVisible","QuestionAnswerBox","answerVisible","questionVisible","question","answer","clickHandler","onClick","App","requestURL","useState","setLoading","setQuestion","setAnswer","setCategory","setDate","setValue","requestData","useCallback","a","fetch","response","json","data","toUpperCase","dayjs","airdate","format","title","useEffect","clearFieldsForNewQuestion","useRandomQuestion","setAnswerVisible","setQuestionVisible","toggleQuestionAnswer","av","qv","bg","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6bca053.chunk.js","sourcesContent":["import {useState,useEffect,useCallback} from 'react'\nimport dayjs from 'dayjs'\n\nexport const stripHTMLFromAnswerResponse = (string) =>{\n// removes <i></i> tags from some jService answers\n    const tagRE =  />(?<contents>.+)</\n    if(tagRE.test(string)){\n    string = string.match(tagRE).groups.contents}\n    string = string.replace(\"\\\\\",\"\")\n    return string;\n}\n\nexport default function useFetch(requestURL){\n    const [loading,setLoading] = useState(true)\n    const [question,setQuestion] = useState(null)\n    const [answer,setAnswer] = useState(null)\n    const [category,setCategory] = useState(null)\n    const [date,setDate] = useState(null)\n    const [value,setValue] = useState(null)\n    const [makeRequest,setMakeRequest] = useState(false)\n\n\n    const requestData = useCallback(\n        async ()=>{\n       let response = await fetch('http://jservice.io/api/random') \n       let data = await response.json()\n       data = data[0]\n       setQuestion(data.question.toUpperCase())\n       setAnswer(stripHTMLFromAnswerResponse( data.answer).toUpperCase())\n       setDate(dayjs(data.airdate).format(\"MMMM D, YYYY\"))\n       setCategory(data.category.title.toUpperCase())\n       setValue(data.value)\n       setLoading(false)\n    },[])\n\n    const clearFieldsForNewQuestion = () =>{\n        setQuestion(null)\n        setAnswer(null)\n        // setDate(null)\n        // setCategory(null)\n        // setValue(null)\n    }\n    \n    useEffect(requestData,[requestData])\n\n    return {question,answer,category,date,value,loading,requestData,clearFieldsForNewQuestion}\n}","import styled from 'styled-components'\n\nexport const jeopardyBlue = \"#061790\"\nexport const jeopardyGrey = \"#f9f9f9\"\nexport const jeopardyYellow = \"#FFCC00\"\nexport const jeopardyPurple = \"#4f0099\"\nexport const jeopardyWhite = \"#ededed\"\n\nexport const StyledApp = styled.div`\n    width:100%;\n`\nexport const StyledHeader = styled.header`\n    background-color: ${jeopardyBlue} ;\n    display: flex;\n    flex-direction: column;\n    color: ${jeopardyYellow};\n`\n\nexport const FlexDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n`\nexport const StyledQuestionInformation = styled.div`\n    margin: .5em;\n    margin-left: auto;\n    margin-right: auto;\n    font-family: 'Helvetica',sans-serif;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: ${jeopardyBlue};\n    padding: 10px;\n    height: 100px;\n    border-radius: 2%;\n    max-width: 500px;\n    \n    `\nexport const SmallHeader = styled.h4`\n    font-size: .75em;\n    margin: .25em;\n`\n\nexport const SmallInfo = styled.p`\n    font-size: 1em;\n    min-height: 2em;\n    margin: 0;\n`\nexport const MedInfo = styled.p`\n    font-size: 1.5em;\n    margin: 10px;\n    width: 100%;\n`\nexport const MedHeader = styled.h2`\n    margin: .25em;\n`\nexport const CategoryName = styled(MedInfo)`\n    color: ${jeopardyWhite};\n    font-weight: bold;\n    text-align: center;\n    text-shadow: 3px 3px black;\n    width: 60%;\n    font-family: \"Open Sans\", sans;\n`\nexport const ValueInfo = styled(MedInfo)`\n    color: ${jeopardyYellow};\n    font-weight: bold;\n    width: 25%;\n    text-shadow: 2px 2px black;\n    font-size: 2em;\n`\nexport const VisibilityToggle = styled.div`\n    visibility: ${props => props.visible? \"visibile\":\"hidden\"};\n`\nexport const Button = styled.button`\n    cursor: pointer;\n    margin: 5px;\n    height: 35px;\n    background-color: ${jeopardyPurple};\n    color: ${jeopardyYellow}; \n    font-weight: bold;\n    min-width: 110px;\n    border: none;\n    border-radius: 7%;\n\n    &:hover{\n        box-shadow: 0px 1px 1px black;\n    }\n`\nexport const StyledAnswer = styled.div`\n        margin: 1em;\n`\nexport const StyledQuestion = styled.div`\n    cursor: pointer;\n    margin: auto;\n    max-width: 400px;\n    height: 200px;\n    background-color: ${jeopardyBlue};\n    font-weight: bold;\n    padding: 75px;\n    color: white;\n    box-shadow: -1px 8px 10px lightgray;\n`\n\nexport const StyledQuestionText = styled(MedInfo)`\n    font-family: \"Newsreader\",serif;\n    text-shadow: 3px 3px black;\n`\n\nexport const StyledLoadingWrapper = styled.div`\n    margin: auto;\n    padding: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\nexport const ContentFrame = styled.div`\n    max-width: 75%;\n    margin: auto;\n`\nexport const Controls = styled.div`\n    margin: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\nexport const Date = styled.div`\n    text-align: center;\n   font-size: .8em; \n`","import { StyledHeader,MedHeader } from './styledcomponents/components'\n\nconst Header = props =>{\n    return(\n        <StyledHeader>\n            <MedHeader>JEOPARDY!</MedHeader>\n        </StyledHeader>)\n}\n\nexport default Header","import {BeatLoader} from 'react-spinners'\nimport {StyledLoadingWrapper,jeopardyPurple} from './styledcomponents/components' \n\nconst Loader = () =>{\n    return(\n        <StyledLoadingWrapper>\n            <BeatLoader color={jeopardyPurple}/>\n        </StyledLoadingWrapper>\n    )\n}\nconst LoadingHandler = ({loading,children}) =>{\n   if(loading) {\n       return <Loader/>\n   }\n   return children \n}\n\nexport default LoadingHandler","import {ValueInfo,CategoryName, SmallHeader,StyledQuestionInformation, VisibilityToggle} from './styledcomponents/components'\n\n\n\nexport default function QuestionInformation({category,value,date}){\n\nreturn(\n    <StyledQuestionInformation>\n            <CategoryName>{category}</CategoryName>\n            <ValueInfo>{value?\"$\":null}{value}</ValueInfo>\n    </StyledQuestionInformation>\n    )\n}","// box will fade between question and answer\n\nimport styled from 'styled-components'\n\nexport const InnerRelativeShell = styled.div`\n    position: relative;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const ContentContainer = styled.div`\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    width: 100%;\n    height: 100%;\n    transition: opacity 750ms;\n    opacity: ${props=>props.isVisible?1:0};\n    z-index: ${props=> props.isVisible?1:0}\n`;\n\n","import {Container,InnerRelativeShell,ContentContainer} from './StyledQuestionAnswerBox'\nimport {StyledQuestion, StyledQuestionText} from './styledcomponents/components'\n\n// box will fade between question and answer\nconst QuestionAnswerBox = ({answerVisible,questionVisible,question,answer,clickHandler}) =>{\n    return(\n        <StyledQuestion onClick={clickHandler}>\n            <InnerRelativeShell>\n                {/* //question container */}\n                <ContentContainer isVisible={questionVisible}>\n                    <StyledQuestionText>{question}</StyledQuestionText>\n                </ContentContainer>\n                {/* // answer container */}\n                <ContentContainer isVisible={answerVisible}>\n                    <StyledQuestionText>{answer}</StyledQuestionText>\n                </ContentContainer>\n            </InnerRelativeShell>           \n        </StyledQuestion>\n    )\n}\n\nexport default QuestionAnswerBox","import './App.css';\nimport useRandomQuestion from './hooks/useRandomQuestion'\nimport Header from './header'\nimport LoadingHandler from './LoadingHandler'\nimport Question from './Question';\nimport Answer from './Answer';\nimport QuestionInformation from './QuestionInformation';\nimport {StyledQuestion, Button,StyledApp,ContentFrame,Controls,Date} from './styledcomponents/components'\nimport {useEffect, useState} from 'react'\nimport {Fade} from './Fade'\nimport QuestionAnswerBox from './QuestionAnswerBox'\nfunction App() {\n  const {question,answer,category,value,date,loading,requestData,clearFieldsForNewQuestion} = useRandomQuestion() \n  const [answerVisible,setAnswerVisible] = useState(false)\n  const [questionVisible,setQuestionVisible] = useState(false)\n\n\n  useEffect(()=>{\n    if(question){\n    setAnswerVisible(false)\n    setQuestionVisible(true)\n  }\n  },[question])\n\n  const getNewQuestion= () =>{\n    setAnswerVisible(false)\n    setQuestionVisible(false)\n    setTimeout(requestData,750) }// Wait until q+a have faded before getting info\n\n  const toggleQuestionAnswer = () =>{\n    setAnswerVisible(av=>!av)\n    setQuestionVisible(qv=>!qv)\n  }\n\n  return (\n    <StyledApp>\n      <Header/>\n      <LoadingHandler loading={loading} >\n        <ContentFrame>\n            <QuestionInformation date={date} category={category} value = {value} />\n            <QuestionAnswerBox \n            answerVisible={answerVisible} \n            questionVisible={questionVisible} \n            question={question} \n            answer={answer}\n            clickHandler={toggleQuestionAnswer} \n            />\n        </ContentFrame>\n        <Date>\n          {date}\n        </Date>\n      <Controls>\n        <Button\n          onClick={()=>{\n            toggleQuestionAnswer()\n          }}>\n          Reveal Answer\n        </Button>\n      \n        <Button \n          bg=\"blue\" \n          color=\"red\" \n          onClick={()=>{\n          getNewQuestion()}}>\n          Ask Another\n          </Button>\n\n      </Controls>\n      </LoadingHandler>\n    </StyledApp>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}