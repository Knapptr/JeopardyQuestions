{"version":3,"sources":["hooks/useRandomQuestion.js","styledcomponents/components.js","header.js","LoadingHandler.js","QuestionInformation.js","StyledQuestionAnswerBox.js","QuestionAnswerBox.js","App.js","reportWebVitals.js","index.js"],"names":["stripHTMLFromAnswerResponse","string","tagRE","test","match","groups","contents","replace","jeopardyBlue","jeopardyYellow","jeopardyWhite","defaultBoxShadow","defaultTextShadow","StyledApp","styled","div","StyledHeader","header","layout","space","defaultProps","py","my","mx","Title","h1","typography","fontSize","textAlign","StyledQuestionInformation","width","height","h4","p","MedInfo","CategoryName","h2","ValueInfo","props","visibility","visible","Button","button","StyledQuestion","QuestionAnswerText","px","maxWidth","lineHeight","StyledLoadingWrapper","ContentFrame","mb","Controls","Date","Header","Loader","color","LoadingHandler","loading","children","QuestionInformation","category","value","date","length","InnerRelativeShell","ContentContainer","isVisible","QuestionAnswerBox","answerVisible","questionVisible","question","answer","clickHandler","onClick","App","requestURL","useState","setLoading","setQuestion","setAnswer","setCategory","setDate","setValue","requestData","useCallback","a","hasQuestionAndAnswer","fetch","response","json","data","toUpperCase","dayjs","airdate","format","title","useEffect","clearFieldsForNewQuestion","useRandomQuestion","setAnswerVisible","setQuestionVisible","toggleQuestionAnswer","av","qv","bg","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.372f2144.chunk.js","sourcesContent":["import {useState,useEffect,useCallback} from 'react'\nimport dayjs from 'dayjs'\n\nexport const stripHTMLFromAnswerResponse = (string) =>{\n// removes <i></i> tags from some jService answers\n    const tagRE =  />(?<contents>.+)</\n    if(tagRE.test(string)){\n    string = string.match(tagRE).groups.contents}\n    string = string.replace(\"\\\\\",\"\")\n    return string;\n}\n\nexport default function useFetch(requestURL){\n    const [loading,setLoading] = useState(true)\n    const [question,setQuestion] = useState(null)\n    const [answer,setAnswer] = useState(null)\n    const [category,setCategory] = useState(null)\n    const [date,setDate] = useState(null)\n    const [value,setValue] = useState(null)\n\n\n    const requestData = useCallback(\n        async ()=>{\n            let hasQuestionAndAnswer = false\n            while(!hasQuestionAndAnswer){\n       let response = await fetch('https://jservice.io/api/random') \n       let data = await response.json()\n       data = data[0]\n       setQuestion(data.question.toUpperCase())\n       setAnswer(stripHTMLFromAnswerResponse( data.answer).toUpperCase())\n       setDate(dayjs(data.airdate).format(\"MMMM D, YYYY\"))\n       setCategory(data.category.title.toUpperCase())\n       setValue(data.value)\n       if(data.question !== \"\" && data.answer !== \"\"){\n           hasQuestionAndAnswer = true\n       }\n            }\n       setLoading(false)\n    },[])\n\n    const clearFieldsForNewQuestion = () =>{\n        setQuestion(null)\n        setAnswer(null)\n        // setDate(null)\n        // setCategory(null)\n        // setValue(null)\n    }\n    \n    useEffect(requestData,[requestData])\n\n    return {question,answer,category,date,value,loading,requestData,clearFieldsForNewQuestion}\n}","import styled from 'styled-components'\nimport {space,layout,typography} from 'styled-system'\n\nexport const jeopardyBlue = \"#061790\"\nexport const jeopardyNavy = \"#0D0780\"\nexport const jeopardyLightPurple = \"#A76590\"\nexport const jeopardyLavender = \"#A390E4\"\nexport const jeopardyYellow = \"#FFCC00\"\nexport const jeopardyPurple = \"#320852\"\nexport const jeopardyWhite = \"#ededed\"\nexport const jeopardyGray = \"#424242\"\nexport const defaultBoxShadow = \"-1px 8px 10px #0b0b0b\";\nexport const defaultTextShadow = \"3px 3px black\";\n\nexport const StyledApp = styled.div`\n    width:100%;\n`\nexport const StyledHeader = styled.header`\n${layout}\n${space}\n    background-color: ${jeopardyBlue} ;\n    border-radius: 2px; \n    box-shadow: ${defaultBoxShadow};\n    max-width:1000px;\n\n`\nStyledHeader.defaultProps = {\n   py: [3] ,\n   my: [0,1],\n   mx: [0,2,\"auto\"],\n   \n\n}\nexport const Title = styled.h1`\n    margin: 0;\n    ${space}\n    ${layout}\n    ${typography}\n    color: ${jeopardyYellow};\n    font-family: \"Oswald\";\n\n`\nTitle.defaultProps ={\n    fontSize: [5,6],\n    textAlign: \"center\", \n    \n}\n\nexport const FlexDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n`\nexport const StyledQuestionInformation = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    background-color: ${jeopardyBlue};\n    margin: auto;\n    box-shadow: ${defaultBoxShadow};\n    ${layout} \n    ${space}\n    `\nStyledQuestionInformation.defaultProps = {\n    width: [1,3/4,1/2],\n    height: [\"auto\",135],\n    my: 3,\n    py: 2\n} \n export const SmallHeader = styled.h4`\n    font-size: .75em;\n    margin: .25em;\n`\n\nexport const SmallInfo = styled.p`\n    font-size: 1em;\n    min-height: 2em;\n    margin: 0;\n`\nexport const MedInfo = styled.p`\n    font-size: 1.5em;\n    margin: 10px;\n    width: 100%;\n`\nexport const MedHeader = styled.h2`\n    margin: 0;\n`\nexport const CategoryName = styled.h2`\n    color: ${jeopardyWhite};\n    font-weight: bold;\n    text-shadow: ${defaultTextShadow} ;\n    font-family: \"Open Sans\", sans;\n    min-height: 44px;\n    ${typography}\n    ${space}\n    ${layout}\n`\nCategoryName.defaultProps = {\n    width: [1,1/2],\n    textAlign: [\"center\",\"left\"],\n    fontSize: [3,4],\n    my: 1\n}\nexport const ValueInfo = styled(MedInfo)`\n    color: ${jeopardyYellow};\n    font-weight: bold;\n    text-shadow: 2px 2px black;\n    visibility: ${props=>props.visibility} ;\n    ${typography}\n    ${space}\n    ${layout}\n`\nValueInfo.defaultProps= {\n    width: [1,1/8],\n    textAlign: \"center\",\n    fontSize: [4,4,5],\n    my: 1\n}\nexport const VisibilityToggle = styled.div`\n    visibility: ${props => props.visible? \"visibile\":\"hidden\"};\n`\nexport const Button = styled.button`\n    cursor: pointer;\n    height: 35px;\n    background-color: ${jeopardyBlue};\n    color: ${jeopardyWhite}; \n    font-weight: bold;\n    min-width: 110px;\n    border: none;\n    border-radius: 4px;\n    ${layout}\n    ${space}\n\n    &:hover{\n        box-shadow: 0px 1px 1px black;\n    }\n`\nButton.defaultProps = {\n    mx: 2\n}\n\nexport const StyledAnswer = styled.div`\n        margin: 1em;\n`\nexport const StyledQuestion = styled.div`\n    cursor: pointer;\n    background-color: ${jeopardyBlue};\n    font-weight: bold;\n    color: white;\n    box-shadow: ${defaultBoxShadow};\n    margin: auto;\n    ${layout}\n    ${space}\n`\nStyledQuestion.defaultProps = {\n    width: [1,3/4,1/2],\n    height: [200,320,400],\n}\n\nexport const QuestionAnswerText= styled.p`\n    font-family: \"Newsreader\",serif;\n    text-shadow: ${defaultTextShadow};\n    ${typography}\n    ${space}\n    ${layout}\n`\nQuestionAnswerText.defaultProps = {\n    fontSize: [2,4,5],\n    px: [4,6,5],\n    maxWidth: [350,400],\n    lineHeight: 1.5\n}\n\nexport const StyledLoadingWrapper = styled.div`\n    margin: auto;\n    padding: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\nexport const ContentFrame = styled.div`\n    ${layout}\n    ${space}\n`\nContentFrame.defaultProps = {\n    mb: [4,2],\n    mx: \"auto\"\n\n}\nexport const Controls = styled.div`\n    margin: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\nexport const Date = styled.div`\n    text-align: center;\n    font-size: .8em; \n    color: ${jeopardyWhite};\n    ${layout};\n    ${space};\n    ${typography};\n`\nDate.defaultProps = {\n    width: 1,\n    fontSize: [1,2] \n}","import { StyledHeader,Title } from './styledcomponents/components'\n\nconst Header = props =>{\n    return(\n        <StyledHeader>\n            <Title>JEOPARDY!</Title>\n        </StyledHeader>)\n}\n\nexport default Header","import {BeatLoader} from 'react-spinners'\nimport {StyledLoadingWrapper,jeopardyPurple} from './styledcomponents/components' \n\nconst Loader = () =>{\n    return(\n        <StyledLoadingWrapper>\n            <BeatLoader color={jeopardyPurple}/>\n        </StyledLoadingWrapper>\n    )\n}\nconst LoadingHandler = ({loading,children}) =>{\n   if(loading) {\n       return <Loader/>\n   }\n   return children \n}\n\nexport default LoadingHandler","import {Date,ValueInfo,CategoryName,StyledQuestionInformation } from './styledcomponents/components'\n\n\n\nexport default function QuestionInformation({category,value,date}){\n\nreturn(\n    <StyledQuestionInformation >\n        <Date>{date}</Date>\n            <CategoryName fontSize={category.length>30?[2,3]:[4,5]}>{category}</CategoryName>\n            <ValueInfo visibility={value?\"visible\":\"hidden\"} >{value?\"$\":null}{value||\"$00\"}</ValueInfo>\n    </StyledQuestionInformation>\n    )\n}","// box will fade between question and answer\n\nimport styled from 'styled-components'\n\nexport const InnerRelativeShell = styled.div`\n    position: relative;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const ContentContainer = styled.div`\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    width: 100%;\n    height: 100%;\n    transition: opacity 750ms;\n    opacity: ${props=>props.isVisible?1:0};\n    z-index: ${props=> props.isVisible?1:0}\n`;\n\n","import {InnerRelativeShell,ContentContainer} from './StyledQuestionAnswerBox'\nimport {StyledQuestion,QuestionAnswerText} from './styledcomponents/components'\n\n// box will fade between question and answer\nconst QuestionAnswerBox = ({answerVisible,questionVisible,question,answer,clickHandler}) =>{\n    return(\n        <StyledQuestion onClick={clickHandler}>\n            <InnerRelativeShell>\n                {/* //question container */}\n                <ContentContainer isVisible={questionVisible}>\n                    <QuestionAnswerText fontSize={question.length>140?[1,2,4]:[2,4,5]} >{question}</QuestionAnswerText>\n                </ContentContainer>\n                {/* // answer container */}\n                <ContentContainer isVisible={answerVisible}>\n                    <QuestionAnswerText>{answer}</QuestionAnswerText>\n                </ContentContainer>\n            </InnerRelativeShell>           \n        </StyledQuestion>\n    )\n}\n\nexport default QuestionAnswerBox","import './App.css';\nimport useRandomQuestion from './hooks/useRandomQuestion'\nimport Header from './header'\nimport LoadingHandler from './LoadingHandler'\nimport QuestionInformation from './QuestionInformation';\nimport {Button,StyledApp,ContentFrame,Controls} from './styledcomponents/components'\nimport {useEffect, useState} from 'react'\nimport QuestionAnswerBox from './QuestionAnswerBox'\nfunction App() {\n  const {question,answer,category,value,date,loading,requestData} = useRandomQuestion() \n  const [answerVisible,setAnswerVisible] = useState(false)\n  const [questionVisible,setQuestionVisible] = useState(false)\n\n\n  useEffect(()=>{\n    if(question){\n    setAnswerVisible(false)\n    setQuestionVisible(true)\n  }\n  },[question])\n\n  const getNewQuestion= () =>{\n    setAnswerVisible(false)\n    setQuestionVisible(false)\n    setTimeout(requestData,750) }// Wait until q+a have faded before getting info\n\n  const toggleQuestionAnswer = () =>{\n    setAnswerVisible(av=>!av)\n    setQuestionVisible(qv=>!qv)\n  }\n\n  return (\n    <StyledApp>\n      <Header/>\n      <LoadingHandler loading={loading} >\n        <ContentFrame>\n            <QuestionInformation date={date} category={category} value = {value} />\n            <QuestionAnswerBox \n            answerVisible={answerVisible} \n            questionVisible={questionVisible} \n            question={question} \n            answer={answer}\n            clickHandler={toggleQuestionAnswer} \n            />\n        </ContentFrame>\n      <Controls>\n        <Button\n          onClick={()=>{\n            toggleQuestionAnswer()\n          }}>\n          Reveal Answer\n        </Button>\n      \n        <Button \n          bg=\"blue\" \n          color=\"red\" \n          onClick={()=>{\n          getNewQuestion()}}>\n          Ask Another\n          </Button>\n\n      </Controls>\n      </LoadingHandler>\n    </StyledApp>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}